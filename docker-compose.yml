
services:
  # Base de datos SQL Server para Auth Service
  db-auth:
    container_name: petcare-auth-db
    image: mcr.microsoft.com/mssql/server:2022-latest
    environment:
      SA_PASSWORD: YourStrong@Passw0rd
      ACCEPT_EULA: Y
      MSSQL_PID: Express
    ports:
      - "14400:1433"
    volumes:
      - sql_auth_data:/var/opt/mssql
    restart: unless-stopped
    # healthcheck temporalmente deshabilitado
    # healthcheck:
    #   test: ["CMD-SHELL", "/opt/mssql-tools/bin/sqlcmd -S localhost -U sa -P YourStrong@Passw0rd -Q 'SELECT 1' || exit 1"]
    #   interval: 10s
    #   timeout: 3s
    #   retries: 10
    #   start_period: 30s
    networks:
      - petcare-network

  # Base de datos SQL Server para Cuidador Service
  db-cuidador:
    container_name: petcare-cuidador-db
    image: mcr.microsoft.com/mssql/server:2022-latest
    environment:
      SA_PASSWORD: YourStrong@Passw0rd
      ACCEPT_EULA: Y
      MSSQL_PID: Express
    ports:
      - "14405:1433"
    volumes:
      - sql_cuidador_data:/var/opt/mssql
    restart: unless-stopped
    # healthcheck temporalmente deshabilitado
    # healthcheck:
    #   test: ["CMD-SHELL", "/opt/mssql-tools/bin/sqlcmd -S localhost -U sa -P YourStrong@Passw0rd -Q 'SELECT 1' || exit 1"]
    #   interval: 10s
    #   timeout: 3s
    #   retries: 10
    #   start_period: 30s
    networks:
      - petcare-network

  # Auth Service
  petcare-auth:
    container_name: petcare-auth-service
    build: 
      context: ./auth-service/PetCare.Auth
      dockerfile: Dockerfile
    ports:
      - "5001:8080"
    environment:
      - ASPNETCORE_ENVIRONMENT=Docker
      - DOTNET_RUNNING_IN_CONTAINER=true
      - ConnectionStrings__Default=Server=db-auth;Database=PetCareAuth;User Id=sa;Password=YourStrong@Passw0rd;TrustServerCertificate=true;
    depends_on:
      - db-auth
    restart: unless-stopped
    networks:
      - petcare-network

  # Cuidador Service
  petcare-cuidador:
    container_name: petcare-cuidador-service
    build: 
      context: ./cuidador-service/PetCare.Cuidador
      dockerfile: Dockerfile
    ports:
      - "5008:8080"
    environment:
      - ASPNETCORE_ENVIRONMENT=Docker
      - DOTNET_RUNNING_IN_CONTAINER=true
      - ConnectionStrings__Default=Server=db-cuidador;Database=PetCareCuidador;User Id=sa;Password=YourStrong@Passw0rd;TrustServerCertificate=true;
    depends_on:
      - db-cuidador
    restart: unless-stopped
    networks:
      - petcare-network

  # Base de datos SQL Server para Cliente Service
  db-cliente:
    container_name: petcare-cliente-db
    image: mcr.microsoft.com/mssql/server:2022-latest
    environment:
      SA_PASSWORD: YourStrong@Passw0rd
      ACCEPT_EULA: Y
      MSSQL_PID: Express
    ports:
      - "14410:1433"
    volumes:
      - sql_cliente_data:/var/opt/mssql
    restart: unless-stopped
    networks:
      - petcare-network

  # Cliente Service
  petcare-cliente:
    container_name: petcare-cliente-service
    build:
      context: ./cliente-service/PetCare.Cliente
      dockerfile: Dockerfile
    ports:
      - "5009:8080"
    environment:
      - ASPNETCORE_ENVIRONMENT=Docker
      - DOTNET_RUNNING_IN_CONTAINER=true
      - ConnectionStrings__Default=Server=db-cliente;Database=PetCareCliente;User Id=sa;Password=YourStrong@Passw0rd;TrustServerCertificate=true;
    depends_on:
      - db-cliente
    restart: unless-stopped
    networks:
      - petcare-network

  # Base de datos SQL Server para Request Service
  db-request:
    container_name: petcare-request-db
    image: mcr.microsoft.com/mssql/server:2022-latest
    environment:
      SA_PASSWORD: YourStrong@Passw0rd
      ACCEPT_EULA: Y
      MSSQL_PID: Express
    ports:
      - "14415:1433"
    volumes:
      - sql_request_data:/var/opt/mssql
    restart: unless-stopped
    networks:
      - petcare-network

  # Request Service
  petcare-request:
    container_name: petcare-request-service
    build: 
      context: ./request-service/PetCare.Request
      dockerfile: Dockerfile
    ports:
      - "5010:8080"
    environment:
      - ASPNETCORE_ENVIRONMENT=Docker
      - DOTNET_RUNNING_IN_CONTAINER=true
      - ConnectionStrings__Default=Server=db-request;Database=PetCareRequest;User Id=sa;Password=YourStrong@Passw0rd;TrustServerCertificate=true;
    depends_on:
      - db-request
    restart: unless-stopped
    networks:
      - petcare-network

  # Base de datos SQL Server para Chat Service
  db-chat:
    container_name: petcare-chat-db
    image: mcr.microsoft.com/mssql/server:2022-latest
    environment:
      SA_PASSWORD: YourStrong@Passw0rd
      ACCEPT_EULA: Y
      MSSQL_PID: Express
    ports:
      - "14420:1433"
    volumes:
      - sql_chat_data:/var/opt/mssql
    restart: unless-stopped
    networks:
      - petcare-network

  # Chat Service
  petcare-chat:
    container_name: petcare-chat-service
    build: 
      context: ./chat-service/PetCare.Chat
      dockerfile: Dockerfile
    ports:
      - "5011:8080"
    environment:
      - ASPNETCORE_ENVIRONMENT=Docker
      - DOTNET_RUNNING_IN_CONTAINER=true
      - ConnectionStrings__Default=Server=db-chat;Database=PetCareChat;User Id=sa;Password=YourStrong@Passw0rd;TrustServerCertificate=true;
    depends_on:
      - db-chat
    restart: unless-stopped
    networks:
      - petcare-network

  # Rating Service (futuro)
  # petcare-rating:
  #   build: ./rating-service
  #   ports:
  #     - "5006:5000"
  #   environment:
  #     - ASPNETCORE_ENVIRONMENT=Docker
  #   depends_on:
  #     - db-auth
  #   networks:
  #     - petcare-network

volumes:
  sql_auth_data:
  sql_cuidador_data:
  sql_cliente_data:
  sql_request_data:
  sql_chat_data:

networks:
  petcare-network:
    driver: bridge 